---
# tasks file for ansible-role-nrpe
#
- name: Compile and install in Raspbian
  import_tasks: install_raspbian.yml
  when: ansible_facts["lsb"]["id"] == 'Raspbian'

- name: Install nrpe DEB package
  package:
    state: present
    name: nagios-nrpe-server
  notify:
    - "restart nrpe"
  when: ansible_facts["distribution"] == "Ubuntu" or ansible_facts["distribution"] == "Pop!_OS"

- name: Install nrpe RPM package
  package: state=present name=nrpe
  notify:
    - "restart nrpe"
  when: ansible_os_family == 'RedHat'

- name: Install extra nrpe RPMs
  package:  state=present name="{{ nrpe_extra_rpms }}"
  notify:
    - "restart nrpe"
  when: ansible_os_family == 'RedHat'

- name: Install extra nrpe DEBs
  package:  state=present name="{{ nrpe_extra_debs }}"
  notify:
    - "restart nrpe"
  when: ansible_facts["distribution"] == "Ubuntu" or ansible_facts["distribution"] == "Pop!_OS"

- name: Get information about nrpe service unit file
  stat:
    path: /lib/systemd/system/nrpe.service
  register: nrpe_srv_unit_file

- name: Create systemd unit alias for Ubuntu based distributions
  file:
    path: /lib/systemd/system/nrpe.service
    src: /lib/systemd/system/nagios-nrpe-server.service
    state: link
  when:
    - ansible_facts["distribution"] == "Ubuntu" or ansible_facts["distribution"] == "Pop!_OS"
    - not nrpe_srv_unit_file.stat.exists or (nrpe_srv_unit_file.stat.islnk is defined and nrpe_srv_unit_file.stat.islnk)

- name: Reload systemd
  systemd:
    daemon_reload: true
  when: ansible_facts["distribution"] == "Ubuntu" or ansible_facts["distribution"] == "Pop!_OS"

- name: Remove all hardcoded command settings from default nrpe.cfg
  lineinfile:
    state: absent
    regexp: '^command\['
    path: '/etc/nagios/nrpe.cfg'
    backup: yes
  notify:
    - "restart nrpe"
  when: remove_hardcoded_checks|default(false)|bool

- name: Ensure NRPE group exists
  group:
    name: "{{ nrpe_group }}"

- name: Ensure NRPE user exists
  user:
    name: "{{ nrpe_user }}"
    group: "{{ nrpe_group }}"

- name: Ensure Nagios include dir exists
  file:
    path: "{{ nagios_include_dir }}"
    state: directory
    owner: "{{ nrpe_user }}"
    group: "{{ nrpe_group }}"

- name: Template in override config file (to set allowed_hosts)
  template: src=override.cfg.j2 dest={{ nagios_cfg_file }} mode=0644
            owner={{ nrpe_user }} group={{ nrpe_group }}
  notify:
    - "restart nrpe"

- name: Ensure default config file exists
  file:
    path: /etc/nagios/nrpe.cfg
    state: touch
  notify:
    - "restart nrpe"

- name: Ensure inclusion of other config files
  lineinfile:
    path: /etc/nagios/nrpe.cfg
    line: "include_dir={{ nagios_include_dir }}/"
    backup: yes
  notify:
    - "restart nrpe"

- name: Template in custom checks config file
  template: src=check_nagios.cfg.j2
            dest={{ nagios_include_dir }}/{{ nagios_custom_checks_file }}
            mode=0640
            owner={{ nrpe_user }} group={{ nrpe_group }}
  tags: update_nrpe_cfg
  notify:
    - "restart nrpe"

- name: Make sure nrpe is started and enabled
  service:
    name: nrpe
    state: started
    enabled: yes

- name: Allow nrpe_user to run some HP commands on HP systems
  template: src=sudoers_nrpe_hp dest=/etc/sudoers.d/sudoers_nrpe_hp mode=640
  when: ansible_system_vendor == "HP"

- name: Ensure Nagios cache folder exists
  file:
    path: /var/cache/nagios
    state: directory
    owner: "{{ nrpe_user }}"
    group: "{{ nrpe_group }}"
